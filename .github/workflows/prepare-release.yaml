on:
  push:
    tags:
      - "v*.*.*"

name: Prepare Release

jobs:
  autorelease:
    name: Prepare Release
    runs-on: "ubuntu-latest"
    steps:
      - uses: actions/checkout@v2.3.4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: "16"
      - name: node --version
        run: node --version

      - name: Add package version to environment vars
        run: |
          PROJECT_VERSION=$(node -pe "require('./package.json').version")
          echo "PROJECT_VERSION=$PROJECT_VERSION" >> $GITHUB_ENV
      - name: Check if tag version matches project version
        run: |
          TAG=$(git describe HEAD --tags --abbrev=0)
          echo $TAG
          echo $PROJECT_VERSION
          if [[ "$TAG" != "v$PROJECT_VERSION" ]]; then exit 1; fi
        
      - name: Cache dependencies
        id: cache-deps
        uses: actions/cache@v2
        with:
          path: ./node_modules
          key: node-modules-${{ hashFiles('package-lock.json') }}

      - name: Setup protoc
        uses: arduino/setup-protoc@v1
        with:
          version: "3.17.3"
      - name: protoc --version
        run: protoc --version

      - name: Run build
        run: npm run build

      - name: Run tests
        run: npm run test

      - name: Release Notes
        run: git log $(git describe HEAD~ --tags --abbrev=0)..HEAD --pretty='format:* %h %s%n  * %an <%ae>' --no-merges >> ".github/RELEASE-TEMPLATE.md"

      - name: Create Release Draft
        uses: softprops/action-gh-release@v1
        with:
          body_path: ".github/RELEASE-TEMPLATE.md"
          draft: true
          files: |
            ./protogenerate-${{env.PROJECT_VERSION}}.tgz
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}